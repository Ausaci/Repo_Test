# File: .github/workflows/sync-souce-owner-repo-template.yml
# Need add secrets.PAT

# 1. Need Change Here!
name: repo-sync-by-script
on:
  workflow_dispatch:
    inputs:
      is_sync_repo:
        description: 'Sync remote repos'
        required: true
        default: 'true'
      is_delete_releases:
        description: 'Delete releases after generate tags'
        required: true
        default: 'false'

 # schedule:
   # - cron: '0 1 * * 1'
    # UTC时区，比我们东八区早，上面示例为：每周一9点。
    
env:
  TZ: Asia/Shanghai
  TOCURRENT: false
  TOREMOTE: true
  SYNCTAGS: false
  LISTARRAY: false
  SYNC_SOURCE_TOKEN: ${{ secrets.SYNC_SOURCE_TOKEN }}
  SYNC_DEST_OWNER: ${{ secrets.SYNC_DEST_OWNER }}
  SYNC_DEST_OWNER_EMAIL: ${{ secrets.SYNC_DEST_OWNER_EMAIL }}
  SYNC_DEST_TOKEN: ${{ secrets.SYNC_DEST_TOKEN }}
  # DEST_SSH_KEY: ${{ secrets.SYNC_DEST_SSH_PRIVATE_KEY }}
  SYNC_RELEASE_FEAT: ${{ secrets.SYNC_RELEASE_FEAT }}
  # 2. Need Change Here!
  # SOURCE_OWNER: ChangeMe
  # DEST_OWNER: Namestars
  
jobs:
  sync-remote-repo:
    runs-on: ubuntu-latest
    if: github.event.sender.id == '54447830' || github.event.repository.owner.id == github.event.sender.id
        
    steps:  
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Initiate Environment
        run: |
          sudo apt-get update
          sudo apt-get install dos2unix
          cd $GITHUB_WORKSPACE/sync-repo
          pwd
          ls
          curl -fsSL ${{ secrets.SYNC_CSV_URL }} -o github.CSV
          dos2unix *.sh *.py *.CSV
          chmod 755 *.sh *.py
          env

      - name: git-sync-remote
        if: github.event.inputs.is_sync_repo == 'true' && github.event.inputs.is_sync_repo  != 'false'
        run: |
          cd $GITHUB_WORKSPACE/sync-repo/git-sync
          chmod 755 *.sh *.yml
          docker build -t git-sync:dev_tag -q .
          echo "docker build successfuly"
          cd $GITHUB_WORKSPACE/sync-repo
          echo -e "${{ secrets.SYNC_DEST_SSH_PRIVATE_KEY }}" | sed 's/\\n/\n/g' > dest_id
          pwd
          ls
          sudo ./sync-repo-action.sh ${SYNC_DEST_OWNER} ${SYNC_DEST_OWNER_EMAIL} ${SYNC_DEST_TOKEN} ${SYNC_SOURCE_TOKEN}
          rm -rf dest_id

      - name: Delete releases
        if: github.event.inputs.is_delete_releases == 'true' && github.event.inputs.is_delete_releases  != 'false'
        run: |
          cd $GITHUB_WORKSPACE/sync-repo
          pwd
          ls
          sudo python3 delete_older_releases_action.py

      - name: Telegram notification
        run: |
          cd $GITHUB_WORKSPACE/sync-repo
          rm -rf *.CSV
          # cat ${REPO_MATRIX_FILE}
          # rm -rf ${FUN_LOG} ${REPO_MATRIX_FILE} ${JSONDIR} ${WIKIDIR}
          
          date "+%Y-%m-%d %H:%M:%S"
          # echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
          curl -fsSL -k --data "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=$(date "+%Y-%m-%d %H:%M:%S"): 已使用 Github 同步仓库完成!" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
                  
      # - name: Delete workflow runs
        # uses: Mattraks/delete-workflow-runs@v2
        # with:          
          # token: ${{ secrets.PAT }}
          # repository: ${{ github.repository }}
          # retain_days: 7
          # keep_minimum_runs: 1
          
