# File: .github/workflows/sync-souce-owner-repo-template.yml
# Need add secrets.PAT

name: action-sync-repo-by-python
on:
  workflow_dispatch:
    inputs:
      is_sync_repo:
        description: 'Sync remote repos'
        required: true
        default: 'true'
      is_delete_releases:
        description: 'Delete releases after generate tags'
        required: true
        default: 'true'

 # schedule:
   # - cron: '0 1 * * 1'
    # UTC时区，比我们东八区早，上面示例为：每周一9点。
        
env:
  TZ: Asia/Shanghai
  IS_SYNC_REPO: ${{ github.event.inputs.is_sync_repo }}
  IS_DELETE_RELEASES: ${{ github.event.inputs.is_delete_releases }}
  SYNC_SOURCE_TOKEN: ${{ secrets.SYNC_SOURCE_TOKEN }}
  SYNC_DEST_OWNER: ${{ secrets.SYNC_DEST_OWNER }}
  SYNC_DEST_OWNER_EMAIL: ${{ secrets.SYNC_DEST_OWNER_EMAIL }}
  SYNC_DEST_TOKEN: ${{ secrets.SYNC_DEST_TOKEN }}
  SYNC_DEST_SSH_KEY: ${{ secrets.SYNC_DEST_SSH_PRIVATE_KEY }}
  SYNC_RELEASE_FEAT: ${{ secrets.SYNC_RELEASE_FEAT }}
  SYNC_TG_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  SYNC_TG_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}


jobs:
  sync-remote-repo:
    runs-on: ubuntu-latest
    if: github.event.sender.id == '54447830' || github.event.repository.owner.id == github.event.sender.id

    steps:  
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Initiate Environment
        run: |
          sudo apt-get update
          sudo apt-get install dos2unix
          cd $GITHUB_WORKSPACE/sync-repo
          pwd
          ls
          curl -fsSL ${{ secrets.SYNC_CSV_URL }} -o github.CSV
          curl -fsSL ${{ secrets.SYNC_REPO_SCRIPTS_URL }} -o sync-repo-action.py
          dos2unix *.py *.CSV *.txt
          chmod 755 *.py

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r $GITHUB_WORKSPACE/sync-repo/requirements.txt

      - name: git-sync-remote
        if: github.event.inputs.is_sync_repo == 'true' && github.event.inputs.is_sync_repo  != 'false'
        run: |
          # build docker image
          cd $GITHUB_WORKSPACE/sync-repo/git-sync
          chmod 755 *.sh *.yml
          docker build -t git-sync:dev_tag -q .
          echo "docker build successfully"
          # sync repo
          cd $GITHUB_WORKSPACE/sync-repo
          pwd
          ls
          python3 sync-repo-action.py

      - name: Telegram notification
        run: |
          cd $GITHUB_WORKSPACE/sync-repo
          rm -rf *.CSV
          rm -rf *.py
          
          date "+%Y-%m-%d %H:%M:%S"
          # echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
          curl -fsSL -k --data "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=$(date "+%Y-%m-%d %H:%M:%S"): 已使用 Github 同步仓库完成!" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
                  
      # - name: Delete workflow runs
        # uses: Mattraks/delete-workflow-runs@v2
        # with:          
          # token: ${{ secrets.PAT }}
          # repository: ${{ github.repository }}
          # retain_days: 7
          # keep_minimum_runs: 1
          
